services:

  mylegitech_api:
    container_name: mylegitech-api
    build:
      context: ./api
      dockerfile: Dockerfile
      target: development
    restart: always
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    env_file:
      - ./api/.env
    depends_on:
      mylegitech_postgres:
        condition: service_healthy
    volumes:
      - ./api/src:/app/src
    command: sh -c "npm run typeorm:migration:run && npm run start:dev"
    networks:
      - mylegitech-network

  mylegitech_app:
    container_name: mylegitech-app
    build:
      context: ./app
      dockerfile: Dockerfile
      target: development
    restart: always
    ports:
      - "5173:5173"
    env_file:
      - ./app/.env
    depends_on:
      - mylegitech_api
      - keycloak
    volumes:
      - ./app/src:/app/src
    networks:
      - mylegitech-network

  mylegitech_postgres:
    container_name: mylegitech-postgres
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mylegitech
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_api:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mylegitech-network

  mylegitech_adminer:
    container_name: mylegitech_adminer
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - mylegitech_postgres
    networks:
      - mylegitech-network

  keycloak:
    container_name: keycloak_app
    image: quay.io/keycloak/keycloak:26.1.3
    restart: always
    ports:
      - "8090:8080"
    volumes:
      - ./keycloak/realm:/opt/keycloak/data/import:ro
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      KC_HOSTNAME: http://localhost:8090
      KC_DB_URL: jdbc:postgresql://keycloak_postgres:5432/keycloak
      KC_DB: postgres
      KC_PROXY: edge
      KC_HTTP_ENABLED: "true"
      KC_DB_USERNAME:  user
      KC_DB_PASSWORD: password
    depends_on:
      - keycloak_postgres
    networks:
      - keycloak-network
    command:
      - start-dev
      - --import-realm
      - --verbose


  keycloak_postgres:
    container_name: keycloak_postgres
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_PORT: 5432
    volumes:
      - postgres_data_keycloak:/var/lib/postgresql/data
    networks:
      - keycloak-network

networks:
  keycloak-network:
    name: keycloak-network
    driver: bridge
  mylegitech-network:
    name: mylegitech-network
    driver: bridge

volumes:
  postgres_data_api:
    name: mylegitech_postgres
  postgres_data_keycloak:
    name: keycloak_postgres